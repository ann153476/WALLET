{"version":3,"file":"static/js/988.f5206d61.chunk.js","mappings":"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","sources":["assets/svg/edit-02.svg","pages/TransactionList/TransactionList.module.scss","pages/TransactionList/TransactionList.jsx","pages/TransactionList/TransactionListMobile.module.scss","pages/TransactionList/TransactionListMobile.jsx","pages/TransactionList/Transaction/Transactions.jsx","redux/AddTransaction/addTransaction-selectors.js","webpack://react-homework-template/./src/shared/components/ToggleButton/ToggleButton.module.scss?f3d0","shared/components/ToggleButton/ToggleButton.jsx","webpack://react-homework-template/./src/shared/components/Calendar/Calendar.module.scss?e278","shared/components/Calendar/Calendar.jsx","webpack://react-homework-template/./src/shared/components/Modal/Modal.module.scss?3248","shared/components/Modal/Modal.jsx"],"sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEdit02(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.4999 5.83343 8.1666 3.5001m-6.70835 9.0417 1.97422-.2194c.2412-.0268.3618-.0402.47453-.0767.1-.0324.19518-.0781.28294-.136.09891-.0652.18471-.151.35632-.3226l7.70364-7.70367c.6444-.64433.6444-1.689 0-2.33334-.6443-.64433-1.689-.64433-2.3333 0L2.21293 9.45375c-.17161.17161-.25741.25741-.32264.35633-.05787.08775-.10361.18293-.13599.28292-.03649.1127-.04989.2333-.07669.4745l-.21936 1.9743Z\",\n    stroke: \"#000\",\n    strokeOpacity: 0.8,\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h14v14H0z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit02);\nexport default __webpack_public_path__ + \"static/media/edit-02.5b658457a67b4f5dc0df54d2a89b8762.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TransactionList_root__0ch89\",\"modal-open\":\"TransactionList_modal-open__neVwI\",\"hidden-button\":\"TransactionList_hidden-button__hHws5\",\"box\":\"TransactionList_box__npfc-\",\"boxNotFound\":\"TransactionList_boxNotFound__RERVM\",\"img\":\"TransactionList_img__94JlI\",\"text\":\"TransactionList_text__vDfs5\",\"table\":\"TransactionList_table__+2dO0\",\"thead\":\"TransactionList_thead__FS2dx\",\"tbody\":\"TransactionList_tbody__F2ERC\",\"tdComment\":\"TransactionList_tdComment__dGSLc\",\"btn\":\"TransactionList_btn__nNFNX\",\"btnEdit\":\"TransactionList_btnEdit__uatTn\",\"income\":\"TransactionList_income__Ey8Nh\",\"expence\":\"TransactionList_expence__tNF3l\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  getAllTransaction,\n  deleteTransactions,\n} from 'redux/AddTransaction/addTransaction-operations';\nimport { Modal } from 'shared/components/Modal/Modal';\nimport svg from '../../assets/svg/edit-02.svg';\nimport notfound from '../../assets/background/notfound.png';\nimport css from '../TransactionList/TransactionList.module.scss';\n\nconst initialState = { transactionDate: new Date() };\n\nconst TransactionList = () => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState(initialState);\n  const [showIt, setShowIt] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllTransaction());\n  }, [dispatch]);\n  const categories = useSelector(state => state.categories.categories);\n  const transactions = useSelector(state => state.categories.history);\n  const dateSort = transactions\n    .slice()\n    .sort(\n      (a, b) =>\n        new Date(b.transactionDate).getTime() -\n        new Date(a.transactionDate).getTime()\n    );\n  const showModal = (\n    categoryId,\n    amount,\n    type,\n    transactionDate,\n    comment,\n    id\n  ) => {\n    const finalComment = comment ? comment : '';\n    setState({\n      categoryId,\n      amount,\n      type,\n      transactionDate,\n      comment: finalComment,\n      id,\n    });\n    setShowIt(true);\n  };\n\n  if (dateSort.length !== 0) {\n    return (\n      <div className={css.box}>\n        <table className={css.table}>\n          <thead className={css.thead}>\n            <tr>\n              <th>Date</th>\n              <th>Type</th>\n              <th>Category</th>\n              <th>Comment</th>\n              <th>Sum</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className={css.tbody}>\n            {dateSort?.map(\n              ({ id, transactionDate, type, comment, amount, categoryId }) => {\n                const date = new Date(transactionDate).toLocaleDateString();\n                // console.log(new Date(transactionDate).getTime());\n                const transactionName = categories.find(\n                  category => category.id === categoryId\n                );\n                return (\n                  <tr key={id}>\n                    <td>{date}</td>\n                    {type === 'EXPENSE' ? <td>-</td> : <td>+</td>}\n                    <td>{transactionName?.name}</td>\n                    <td className={css.tdComment}>{comment}</td>\n                    {type === 'EXPENSE' ? (\n                      <td className={css.expence}>\n                        {Math.abs(amount).toFixed(2)}\n                      </td>\n                    ) : (\n                      <td className={css.income}>{amount.toFixed(2)}</td>\n                    )}\n                    <td>\n                      <button\n                        className={css.btnEdit}\n                        onClick={() =>\n                          showModal(\n                            categoryId,\n                            amount,\n                            type,\n                            transactionDate,\n                            comment,\n                            id\n                          )\n                        }\n                      >\n                        <img src={svg} alt=\"Edit\" className={css.svg} />\n                      </button>\n                      <button\n                        className={css.btn}\n                        type=\"button\"\n                        onClick={() => dispatch(deleteTransactions(id))}\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                );\n              }\n            )}\n          </tbody>\n        </table>\n        <Modal\n          textProp={'Edit'}\n          typeProp={state.type}\n          amountProp={Math.abs(state.amount)}\n          dateProp={state.transactionDate}\n          commentProp={state.comment}\n          categoryProp={state.categoryId}\n          preventEdit={true}\n          id={state.id}\n          showIt={showIt}\n          setShowIt={setShowIt}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={css.boxNotFound}>\n        <p className={css.text}>There have been no transactions added yet.</p>\n        <img src={notfound} alt=\"no transaction\" className={css.img} />\n      </div>\n    );\n  }\n};\n\nexport default TransactionList;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TransactionListMobile_root__iVN6D\",\"modal-open\":\"TransactionListMobile_modal-open__e9N3k\",\"hidden-button\":\"TransactionListMobile_hidden-button__+8NqE\",\"box\":\"TransactionListMobile_box__GnQ6K\",\"list\":\"TransactionListMobile_list__c2D63\",\"boxNotFound\":\"TransactionListMobile_boxNotFound__t2t-C\",\"img\":\"TransactionListMobile_img__WUxnT\",\"text\":\"TransactionListMobile_text__H6-oW\",\"table\":\"TransactionListMobile_table__f2rvk\",\"tbody\":\"TransactionListMobile_tbody__KQ27p\",\"head\":\"TransactionListMobile_head__opWsN\",\"pointExpence\":\"TransactionListMobile_pointExpence__gfTSf\",\"pointFirstExpence\":\"TransactionListMobile_pointFirstExpence__H23eX\",\"pointLastExpence\":\"TransactionListMobile_pointLastExpence__2HHCi\",\"pointIncome\":\"TransactionListMobile_pointIncome__RFw+K\",\"pointFirstIncome\":\"TransactionListMobile_pointFirstIncome__FHP4C\",\"pointLastIncome\":\"TransactionListMobile_pointLastIncome__KIwNS\",\"body\":\"TransactionListMobile_body__J6Hpt\",\"editBtn\":\"TransactionListMobile_editBtn__FhF71\",\"btn\":\"TransactionListMobile_btn__750d8\",\"svg\":\"TransactionListMobile_svg__jx066\",\"income\":\"TransactionListMobile_income__XKy9G\",\"expence\":\"TransactionListMobile_expence__+fGKs\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  getAllTransaction,\n  deleteTransactions,\n} from 'redux/AddTransaction/addTransaction-operations';\nimport { Modal } from 'shared/components/Modal/Modal';\nimport svg from '../../assets/svg/edit-02.svg';\nimport notfound from '../../assets/background/notfound.png';\nimport css from '../TransactionList/TransactionListMobile.module.scss';\n\nconst initialState = { transactionDate: new Date() };\n\nconst TransactionListMobile = () => {\n  const [state, setState] = useState(initialState);\n  const [showIt, setShowIt] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTransaction());\n  }, [dispatch]);\n  const categories = useSelector(state => state.categories.categories);\n  const transactions = useSelector(state => state.categories.history);\n  const dateSort = transactions\n    .slice()\n    .sort(\n      (a, b) =>\n        new Date(b.transactionDate).getTime() -\n        new Date(a.transactionDate).getTime()\n    );\n\n  const showModal = (\n    categoryId,\n    amount,\n    type,\n    transactionDate,\n    comment,\n    id\n  ) => {\n    const finalComment = comment ? comment : '';\n    setState({\n      categoryId,\n      amount,\n      type,\n      transactionDate,\n      comment: finalComment,\n      id,\n    });\n    setShowIt(true);\n  };\n\n  if (dateSort.length !== 0) {\n    return (\n      <ul className={css.list}>\n        {dateSort?.map(\n          ({ id, transactionDate, type, comment, amount, categoryId }) => {\n            const date = new Date(transactionDate).toLocaleDateString();\n            const transactionName = categories.find(\n              category => category.id === categoryId\n            );\n            return (\n              <li className={css.box} key={id}>\n                <table className={css.table}>\n                  <tbody className={css.tbody}>\n                    <tr className={css.part}>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.pointFirstExpence}></td>\n                      ) : (\n                        <td className={css.pointFirstIncome}></td>\n                      )}\n                      <td className={css.head}>Date</td>\n                      <td className={css.body}>{date}</td>\n                    </tr>\n                    <tr>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.pointExpence}></td>\n                      ) : (\n                        <td className={css.pointIncome}></td>\n                      )}\n                      <td className={css.head}>Type</td>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.body}>-</td>\n                      ) : (\n                        <td className={css.body}>+</td>\n                      )}\n                    </tr>\n                    <tr>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.pointExpence}></td>\n                      ) : (\n                        <td className={css.pointIncome}></td>\n                      )}\n                      <td className={css.head}>Category</td>\n                      <td className={css.body}>{transactionName?.name}</td>\n                    </tr>\n                    <tr>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.pointExpence}></td>\n                      ) : (\n                        <td className={css.pointIncome}></td>\n                      )}\n                      <td className={css.head}>Comment</td>\n                      <td className={css.body}>{comment}</td>\n                    </tr>\n                    <tr>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.pointExpence}></td>\n                      ) : (\n                        <td className={css.pointIncome}></td>\n                      )}\n                      <td className={css.head}>Sum</td>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.expence}>\n                          {Math.abs(amount).toFixed(2)}\n                        </td>\n                      ) : (\n                        <td className={css.income}>{amount.toFixed(2)}</td>\n                      )}\n                    </tr>\n                    <tr>\n                      {type === 'EXPENSE' ? (\n                        <td className={css.pointLastExpence}></td>\n                      ) : (\n                        <td className={css.pointLastIncome}></td>\n                      )}\n                      <td className={css.head}>\n                        <button\n                          className={css.btn}\n                          type=\"button\"\n                          onClick={() => dispatch(deleteTransactions(id))}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                      <td className={css.bodyLink}>\n                        <button\n                          className={css.editBtn}\n                          onClick={() =>\n                            showModal(\n                              categoryId,\n                              amount,\n                              type,\n                              transactionDate,\n                              comment,\n                              id\n                            )\n                          }\n                        >\n                          <img src={svg} alt=\"Edit\" className={css.svg} />\n                          <span> Edit</span>\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n                <Modal\n                  textProp={'Edit'}\n                  typeProp={state.type}\n                  amountProp={Math.abs(state.amount)}\n                  dateProp={state.transactionDate}\n                  commentProp={state.comment}\n                  categoryProp={state.categoryId}\n                  preventEdit={true}\n                  id={state.id}\n                  showIt={showIt}\n                  setShowIt={setShowIt}\n                />\n              </li>\n            );\n          }\n        )}\n      </ul>\n    );\n  } else {\n    return (\n      <div className={css.boxNotFound}>\n        <p className={css.text}>There have been no transactions added yet.</p>\n        <img src={notfound} alt=\"no transaction\" className={css.img} />\n      </div>\n    );\n  }\n};\nexport default TransactionListMobile;\n","import TransactionList from '../TransactionList';\nimport TransactionListMobile from '../TransactionListMobile';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Transaction = () => {\n  const isDesktop = useMediaQuery({ query: '(min-width: 768px)' });\n  return (\n    <>\n      {isDesktop && <TransactionList />}\n      {!isDesktop && <TransactionListMobile />}\n    </>\n  );\n};\nexport default Transaction;\n","export const categories = state => state.categories.categories;\nexport const loadingStatus = state => state.categories.loading;\nexport const selectorHistory = state => state.categories.history;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ToggleButton_root__gD2xr\",\"modal-open\":\"ToggleButton_modal-open__wv7Te\",\"hidden-button\":\"ToggleButton_hidden-button__N9QiB\",\"wrapper\":\"ToggleButton_wrapper__EhjiR\",\"switch\":\"ToggleButton_switch__7BCWX\",\"input\":\"ToggleButton_input__57Mdu\",\"slider\":\"ToggleButton_slider__BLaE2\",\"sliderDisabled\":\"ToggleButton_sliderDisabled__YvDvF\",\"income\":\"ToggleButton_income__lI+Oy\",\"expense\":\"ToggleButton_expense__1JbKF\"};","import style from './ToggleButton.module.scss';\n\nexport const ToggleButton = ({ status, onChange, disabled }) => {\n  const incomeColor = !status\n    ? 'rgba(36, 204, 167, 1)'\n    : 'rgba(224, 224, 224, 1)';\n  const expenseColor = status\n    ? 'rgba(255, 101, 150, 1)'\n    : 'rgba(224, 224, 224, 1)';\n\n  const fullClassName = disabled ? style.sliderDisabled : style.slider;\n  return (\n    <div className={style.wrapper}>\n      <span style={{ color: incomeColor }} className={style.income}>\n        Income\n      </span>\n      <label className={style.switch}>\n        <input\n          className={style.input}\n          type=\"checkbox\"\n          checked={status}\n          onChange={onChange}\n          disabled={disabled}\n        />\n        <span className={fullClassName}></span>\n      </label>\n      <span style={{ color: expenseColor }} className={style.expense}>\n        Expense\n      </span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Calendar_root__uwSWQ\",\"modal-open\":\"Calendar_modal-open__rtUGM\",\"hidden-button\":\"Calendar_hidden-button__fQtPE\",\"calendar\":\"Calendar_calendar__eIB5M\",\"wrapper\":\"Calendar_wrapper__wtxE5\"};","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport style from './Calendar.module.scss';\n\nexport const Calendar = ({ date, onSubmit, preventEdit }) => {\n  const currentDate = new Date();\n  return (\n    <div className={style.wrapper}>\n      <ReactDatePicker\n        disabled={preventEdit}\n        className={style.calendar}\n        selected={new Date(date)}\n        dateFormat=\"dd/MM/yyyy\"\n        maxDate={currentDate}\n        onChange={chosenDate => {\n          onSubmit(chosenDate);\n        }}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Modal_root__YXNRH\",\"modal-open\":\"Modal_modal-open__0fdAm\",\"hidden-button\":\"Modal_hidden-button__4M6QL\",\"backdrop\":\"Modal_backdrop__KjrTQ\",\"modal\":\"Modal_modal__7Omag\",\"div\":\"Modal_div__+uVNO\",\"header\":\"Modal_header__wQ5t0\",\"direction\":\"Modal_direction__3hgc+\",\"amount\":\"Modal_amount__848Le\",\"comment\":\"Modal_comment__HcRI6\",\"add\":\"Modal_add__fEjG+\",\"cancel\":\"Modal_cancel__6JwUR\",\"selector\":\"Modal_selector__cw-7C\",\"close\":\"Modal_close__hrkXl\",\"wrapper\":\"Modal_wrapper__fpg-v\",\"error\":\"Modal_error__qaEub\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { createPortal } from 'react-dom';\nimport { ToggleButton } from '../ToggleButton/ToggleButton';\nimport { Calendar } from '../Calendar/Calendar';\nimport { Transition } from '../Transition/Transition';\nimport {\n  addTransaction,\n  editTransactions,\n} from 'redux/AddTransaction/addTransaction-operations';\nimport { categories } from 'redux/AddTransaction/addTransaction-selectors';\nimport { TransitionOnClick } from '../Transition/Transition';\nimport style from './Modal.module.scss';\n\nconst initialIncomeCategory = [\n  {\n    id: 'default',\n    type: `INCOME`,\n  },\n];\n\nexport const Modal = ({\n  textProp,\n  typeProp = 'EXPENSE',\n  amountProp = '',\n  dateProp,\n  commentProp = '',\n  categoryProp = 'disabled',\n  preventEdit,\n  id,\n  showIt,\n  setShowIt,\n}) => {\n  const [toggle, setToggle] = useState(false);\n  const [type, setType] = useState('');\n  const [date, setDate] = useState('');\n  const [incomeCat, setIncomeCat] = useState(initialIncomeCategory);\n  const incomeCategory = useSelector(categories);\n  const list = useSelector(categories);\n\n  const modalRoot = document.querySelector('#modal-root');\n  const body = document.querySelector('body');\n  const exitBtn = document.querySelector('#exit');\n  const addBtn = document.querySelector('#add');\n  const dispatch = useDispatch();\n\n  const currentStatus = type === 'EXPENSE' ? true : false;\n  // console.log(`modal rendered`);\n  useEffect(() => setToggle(currentStatus), [currentStatus, toggle]);\n\n  useEffect(() => {\n    setDate(dateProp);\n  }, [dateProp]);\n\n  useEffect(() => {\n    if (incomeCategory.length !== 0) {\n      setIncomeCat(incomeCategory);\n    }\n    setType(typeProp);\n  }, [incomeCategory, typeProp]);\n\n  //// запрет скролла боди при маунте модального окна,\n  //// добавление слушателя для закрытия по Эскейп,\n  //// дизейбл повторного нажатия кнопки выхода на хэдере\n\n  useEffect(() => {\n    if (showIt) {\n      document.addEventListener(`keydown`, handleClose);\n    }\n    return () => document.removeEventListener(`keydown`, handleClose);\n  });\n\n  useEffect(() => {\n    if (showIt) {\n      body.classList.add('modal-open');\n      exitBtn.setAttribute('disabled', true);\n      addBtn.classList.add('hidden-button');\n    }\n  }, [showIt, body, exitBtn, addBtn]);\n\n  //// Получение адекватных названий категорий из айди\n\n  let incomeId = incomeCat.find(item => item.type === 'INCOME').id;\n  const validCategories = list\n    .filter(item => item.type === 'EXPENSE')\n    .map(item => item.id);\n\n  const categoriesList = list\n    .filter(item => item.type === 'EXPENSE')\n    .map(item => {\n      return (\n        <option value={item.id} key={item.id}>\n          {item.name}\n        </option>\n      );\n    });\n\n  //// Схема валидации и вывода ошибок валидации\n\n  const validationList =\n    type === 'EXPENSE'\n      ? validCategories\n      : [...validCategories, incomeId, 'disabled'];\n\n  const initialValues = {\n    amount: amountProp,\n    comment: commentProp,\n    categoryId: categoryProp,\n  };\n\n  const validationSchema = Yup.object({\n    amount: Yup.number()\n      .positive('Must be a positive number')\n      .required('Amount is required')\n      .typeError('Must be a number'),\n    categoryId: Yup.string()\n      .oneOf(validationList, 'Choose category')\n      .required('Choose category'),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <p className={style.error}>{message}</p>}\n      />\n    );\n  };\n\n  //// Функции для работы с инпутами и селекторами\n\n  const handleType = () => {\n    type === 'EXPENSE' ? setType('INCOME') : setType('EXPENSE');\n    setToggle(prevState => (prevState ? false : true));\n  };\n\n  const handleSubmit = ({ amount, comment, categoryId }) => {\n    if (type === `INCOME`) {\n      categoryId = incomeId;\n    }\n    const result = {\n      transactionDate: new Date(date).toISOString(),\n      type,\n      categoryId: categoryId,\n      comment: comment,\n      amount: type === 'EXPENSE' ? +`-${amount}` : +amount,\n    };\n    textProp === 'Edit'\n      ? dispatch(editTransactions({ result, id }))\n      : dispatch(addTransaction(result));\n    hideModal();\n  };\n\n  const handleCalendar = date => {\n    setDate(date);\n  };\n\n  const hideModal = () => {\n    setShowIt(false);\n    body.classList.remove('modal-open');\n    exitBtn.removeAttribute('disabled');\n    addBtn.classList.remove('hidden-button');\n    if (textProp === 'Add') {\n      setType('EXPENSE');\n    }\n  };\n\n  const handleClose = event => {\n    if (event.code === 'Escape' || event.target === event.currentTarget) {\n      hideModal();\n    }\n  };\n\n  return createPortal(\n    <TransitionOnClick showIt={showIt} type={'opacity'}>\n      <div className={style.backdrop} onClick={handleClose}>\n        <Formik\n          validationSchema={validationSchema}\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validateOnChange={false}\n        >\n          <Form className={style.modal}>\n            <div className={style.div}>\n              <button\n                className={style.close}\n                type=\"button\"\n                onClick={hideModal}\n              ></button>\n              <h2 className={style.header}>{textProp} transaction</h2>\n              <ToggleButton\n                status={currentStatus}\n                name=\"type\"\n                onChange={handleType}\n                disabled={preventEdit}\n              />\n              <div style={{ height: '73px' }}>\n                <Transition\n                  showIt={toggle}\n                  type=\"opacity\"\n                  setShowIt={setToggle}\n                >\n                  <div className={style.wrapper}>\n                    <Field\n                      as=\"select\"\n                      className={style.selector}\n                      disabled={preventEdit}\n                      name=\"categoryId\"\n                    >\n                      <option name=\"disabled\" value=\"disabled\">\n                        Select category\n                      </option>\n                      {categoriesList}\n                    </Field>\n                    <FormError name=\"categoryId\" className={style.error} />\n                  </div>\n                </Transition>\n              </div>\n              <div className={style.direction}>\n                <div className={style.wrapper}>\n                  <Field\n                    className={style.amount}\n                    type=\"text\"\n                    name=\"amount\"\n                    placeholder=\"0.00\"\n                  ></Field>\n                  <FormError name=\"amount\" />\n                </div>\n                <Calendar\n                  preventEdit={preventEdit}\n                  date={date}\n                  onSubmit={handleCalendar}\n                />\n              </div>\n              <Field\n                as=\"textarea\"\n                className={style.comment}\n                type=\"text\"\n                placeholder=\"comment\"\n                name=\"comment\"\n              ></Field>\n\n              <button className={style.add} type=\"submit\">\n                {textProp.toUpperCase()}\n              </button>\n\n              <button\n                className={style.cancel}\n                type=\"button\"\n                onClick={hideModal}\n              >\n                CANCEL\n              </button>\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    </TransitionOnClick>,\n    modalRoot\n  );\n};\n"],"names":["initialState","transactionDate","Date","dispatch","useDispatch","useState","state","setState","showIt","setShowIt","useEffect","getAllTransaction","categories","useSelector","transactions","history","dateSort","slice","sort","a","b","getTime","length","className","css","map","id","type","comment","amount","categoryId","date","toLocaleDateString","transactionName","find","category","name","Math","abs","toFixed","onClick","showModal","src","svg","alt","deleteTransactions","Modal","textProp","typeProp","amountProp","dateProp","commentProp","categoryProp","preventEdit","notfound","isDesktop","useMediaQuery","query","selectorHistory","ToggleButton","status","onChange","disabled","incomeColor","expenseColor","fullClassName","style","color","checked","Calendar","onSubmit","currentDate","selected","dateFormat","maxDate","chosenDate","initialIncomeCategory","toggle","setToggle","setType","setDate","incomeCat","setIncomeCat","incomeCategory","list","modalRoot","document","querySelector","body","exitBtn","addBtn","currentStatus","addEventListener","handleClose","removeEventListener","classList","add","setAttribute","incomeId","item","validCategories","filter","categoriesList","value","validationList","initialValues","validationSchema","Yup","positive","required","typeError","oneOf","FormError","render","message","hideModal","remove","removeAttribute","event","code","target","currentTarget","createPortal","Transition","result","toISOString","editTransactions","addTransaction","validateOnChange","prevState","height","as","placeholder","toUpperCase"],"sourceRoot":""}